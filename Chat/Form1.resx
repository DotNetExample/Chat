<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKSAAAAEAIACoFQAAFgAAACgAAAApAAAAQAAAAAEAIAAAAAAAgBQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAu7ezQLy4s7+9trYiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALy4tES+ubRmvLmzi725s7W8ubOlvbmzfry5s1q9ubJIv7qzary5
        s529ubP/vbmz6wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALy3
        sVy+ubO7vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+8ubKVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL64s16+ubTLvbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s80AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC9ubOnvbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/726s5sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvLizdr25
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/764soUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvbq0VL+/rxAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL23sli9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/7y5
        s1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvbmz/725s6++ubRqAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAvbmzxb25s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vrmzz7+/rxAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC9ubOlvbmz/725s/+9ubPrvbmzfr25s369ubN+vrqzib65tLG9ubLZvbmz/726
        s1C9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbm0jwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL64
        tEq9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubPlvbiyj725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubLZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvLy2Kr25s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s82+ubSZvbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+qqqoGAAAAAAAAAAAAAAAAAAAAALy8tiq9ubPVvbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmyk765sre9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/7u7sh4AAAAAAAAAAAAA
        AAC8vLYqvbmz1b25s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubPDvbqzl725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/v7+vEAAAAAAAAAAAvLy2Kr25s9W9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725svO9ubJ4vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmzfru3s0C9ubN+vbmz/725s/+9ubP/vbmz/725s/+9ubJ0vbq0VL66s7+9ubP/vbmz/725
        s/+9ubP/vbmz/766s78AAAAAAAAAAAAAAAC9ubOrvbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/766s0K9ubLzvbmz/725s/+9ubP/vbmz/725s/+7t7NAAAAAAAAA
        AAC9ubP/vbmz/725s/+9ubP/vrqzvwAAAAAAAAAAu7ezQL25s/+9ubP/vbmz/725s/+9ubP/vrmycAAA
        AAAAAAAAvLy2Kr25s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vLmzob66s5G9ubP/vbmz/725s/+9ubP/vbmz/725s367t7NAvbmztb25s/+9ubP/vbmz/725
        s/+9ubP/vbq0n765tGq9uLPZvbmz/725s/+9ubP/vbmz/725s8W/qqoMAAAAAAAAAAC9ubN+vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbqzRr25
        stm9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbm0OgAAAAAAAAAAAAAAAL25s9W9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubPXwbmyIL25s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/7y4
        s40AAAAAAAAAAAAAAAC8t7M4vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubN+vrqyPr26s/O9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubN+AAAAAAAAAAAAAAAAAAAAAL65
        tXC9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/++ubSdvbiyMr25s4e9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubOrwri4GAAAAAAAAAAAAAAAAAAAAAAAAAAAvbmzfr25s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9uLLPvrmzdL29tR6+uLRKvLizw725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s9W+urOJvLixSAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8t7M4vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubP/vbm09b25
        s6+9ubSFvbmyQr25sT6+urNKvLm0WL25s368t7EuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC+ubTjvbmz/725s/+9ubP/vbmz/725s/+9ubP/vbmz/725s7e9ubO3vbmz/725
        s/+9ubP/vbmz/725s/+9ubP/vbmz/765s7u8ubKZvrqzv725s/+9ubP/vbmz/725s/+9ubP/vbmz/725
        s/+9ubOXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALy4
        sp+9ubP/vbmz/725s/+9ubP/vbmz/725s/+9ubN+AAAAAAAAAAC9ubN+vbmz/725s/+9ubP/vbmz/725
        s/+9ubP/vrm0MgAAAAAAAAAAvrqzv725s/+9ubP/vbmz/725s/+9ubP/vbmz/7u3tEYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu7izWr25s/+9ubP/vbmz/725
        s/+9ubP/vbmz/726smQAAAAAAAAAAL26smS9ubP/vbmz/725s/+9ubP/vbmz/725s/++ubQyAAAAAAAA
        AAC9urSfvbmz/725s/+9ubP/vbmz/725s/+8ubKdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvLmzi725s/+9ubP/vbmz/725s/+9ubP/vrqzv725
        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
</value>
  </data>
</root>